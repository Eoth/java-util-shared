<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="oeht_laptop" failures="13" tests="130" name="Default test" time="0.931" errors="0" timestamp="2023-06-25T14:22:42 CEST">
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects" time="0.014"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Collections" time="0.003"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Collections_DifferentElements" time="0.01"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Collections_DifferentSizes" time="0.004"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Collections_Empty" time="0.001"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Collections_Null" time="0.003"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_ComplexObjects" time="0.019"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_ComplexObjects_DifferentFields" time="0.003"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_ComplexObjects_Null" time="0.004"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_DifferentTypes" time="0.004"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_ImmutableType" time="0.003"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_ImmutableType_NotEqual" time="0.004"/>
  <testcase classname="com.utils.shared.unit.test.assertions.ObjectComparatorTest" name="testCompareObjects_Null" time="0.005"/>
  <testcase classname="com.utils.shared.unit.test.data.PopulatorTest" name="testPopulate_shouldPopulateWithOption" time="0.043"/>
  <testcase classname="com.utils.shared.unit.test.data.PopulatorTest" name="testPopulate_shouldPopulateWithoutOption" time="0.005"/>
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testCreateDirectoryStructure" time="0.016">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
        <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.utils.shared.util.FileUtilTest.testCreateDirectoryStructure(FileUtilsTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testCreateDirectoryStructure -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testCreateDirectoryStructure_invalidRoot" time="0.002"/>
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testFindFilesByExtension" time="0.001">
    <failure type="java.lang.AssertionError" message="expected [0] but found [2]">
        <![CDATA[java.lang.AssertionError: expected [0] but found [2]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at org.testng.Assert.assertEquals(Assert.java:1428)
at com.utils.shared.util.FileUtilTest.testFindFilesByExtension(FileUtilsTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFindFilesByExtension -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testGetDirectorySize" time="0.001">
    <failure type="java.lang.AssertionError" message="expected [0] but found [1024]">
        <![CDATA[java.lang.AssertionError: expected [0] but found [1024]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:979)
at org.testng.Assert.assertEquals(Assert.java:955)
at org.testng.Assert.assertEquals(Assert.java:989)
at com.utils.shared.util.FileUtilTest.testGetDirectorySize(FileUtilsTest.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testGetDirectorySize -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testGetDirectorySize_invalidDirectory" time="0.002"/>
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testListFilesInDirectory" time="0.001">
    <failure type="java.lang.AssertionError" message="expected [0] but found [2]">
        <![CDATA[java.lang.AssertionError: expected [0] but found [2]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at org.testng.Assert.assertEquals(Assert.java:1428)
at com.utils.shared.util.FileUtilTest.testListFilesInDirectory(FileUtilsTest.java:17)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testListFilesInDirectory -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testReadFileAsString" time="0.003">
    <failure type="java.io.FileNotFoundException" message="path\to\file.txt (Le chemin d’accès spécifié est introuvable)">
        <![CDATA[java.io.FileNotFoundException: path\to\file.txt (Le chemin d’accès spécifié est introuvable)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:158)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
at com.utils.shared.util.FileUtil.readFileAsString(FileUtils.java:217)
at com.utils.shared.util.FileUtilTest.testReadFileAsString(FileUtilsTest.java:65)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testReadFileAsString -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testReadFileAsString_invalidFile" time="0.001"/>
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testWriteStringToFile" time="0.002">
    <failure type="java.io.FileNotFoundException" message="path\to\file.txt (Le chemin d’accès spécifié est introuvable)">
        <![CDATA[java.io.FileNotFoundException: path\to\file.txt (Le chemin d’accès spécifié est introuvable)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:295)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:236)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:124)
at com.utils.shared.util.FileUtil.writeStringToFile(FileUtils.java:243)
at com.utils.shared.util.FileUtilTest.testWriteStringToFile(FileUtilsTest.java:80)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testWriteStringToFile -->
  <testcase classname="com.utils.shared.util.FileUtilTest" name="testWriteStringToFile_invalidFile" time="0.002"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_InvalidJson_ReturnsNull" time="0.01">
    <failure type="java.lang.AssertionError" message="expected [null] but found [java.lang.Object@79da8dc5]">
        <![CDATA[java.lang.AssertionError: expected [null] but found [java.lang.Object@79da8dc5]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotSame(Assert.java:1573)
at org.testng.Assert.assertNull(Assert.java:1506)
at org.testng.Assert.assertNull(Assert.java:1494)
at com.utils.shared.util.JsonUtilTest.testFromJson_InvalidJson_ReturnsNull(JsonUtilsTest.java:84)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_InvalidJson_ReturnsNull -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonArray_ReturnsArrayObject" time="0.06">
    <failure type="java.lang.AssertionError" message="Arrays not equal: expected: null and actual: [foo, bar, baz]">
        <![CDATA[java.lang.AssertionError: Arrays not equal: expected: null and actual: [foo, bar, baz]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.assertEquals(Assert.java:1761)
at org.testng.Assert.assertEquals(Assert.java:1918)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonArray_ReturnsArrayObject(JsonUtilsTest.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonArray_ReturnsArrayObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonBoolean_ReturnsBooleanObject" time="0.001">
    <failure type="java.lang.ClassCastException" message="Cannot cast java.lang.Boolean to boolean">
        <![CDATA[java.lang.ClassCastException: Cannot cast java.lang.Boolean to boolean
at java.base/java.lang.Class.cast(Class.java:3946)
at com.utils.shared.util.JsonUtil.fromJson(JsonUtils.java:209)
at com.utils.shared.util.JsonUtil.fromJson(JsonUtils.java:190)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonBoolean_ReturnsBooleanObject(JsonUtilsTest.java:107)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonBoolean_ReturnsBooleanObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonCollection_ReturnsCollectionObject" time="0.003">
    <failure type="java.lang.AssertionError" message="Collections not equal: expected: null and actual: [foo, bar, baz]">
        <![CDATA[java.lang.AssertionError: Collections not equal: expected: null and actual: [foo, bar, baz]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.assertEquals(Assert.java:1625)
at org.testng.Assert.assertEquals(Assert.java:1605)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonCollection_ReturnsCollectionObject(JsonUtilsTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonCollection_ReturnsCollectionObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonNumber_ReturnsNumberObject" time="0.001">
    <failure type="java.lang.ClassCastException" message="Cannot cast java.lang.Integer to int">
        <![CDATA[java.lang.ClassCastException: Cannot cast java.lang.Integer to int
at java.base/java.lang.Class.cast(Class.java:3946)
at com.utils.shared.util.JsonUtil.fromJson(JsonUtils.java:201)
at com.utils.shared.util.JsonUtil.fromJson(JsonUtils.java:190)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonNumber_ReturnsNumberObject(JsonUtilsTest.java:99)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonNumber_ReturnsNumberObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonObject_ReturnsMapObject" time="0.004">
    <failure type="java.lang.AssertionError" message="Maps not equal: expected: null and actual: {name=John Doe, age=30, employed=true}">
        <![CDATA[java.lang.AssertionError: Maps not equal: expected: null and actual: {name=John Doe, age=30, employed=true}
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.assertEquals(Assert.java:2131)
at org.testng.Assert.assertEquals(Assert.java:2089)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonObject_ReturnsMapObject(JsonUtilsTest.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonObject_ReturnsMapObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_JsonString_ReturnsStringObject" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [&amp;quot;Hello, World!&amp;quot;] but found [Hello, World!]">
        <![CDATA[java.lang.AssertionError: expected ["Hello, World!"] but found [Hello, World!]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.utils.shared.util.JsonUtilTest.testFromJson_JsonString_ReturnsStringObject(JsonUtilsTest.java:92)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testFromJson_JsonString_ReturnsStringObject -->
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testFromJson_NullJson_ReturnsNull" time="0.002"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_ArrayObject_ReturnsJsonArray" time="0.003"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_BooleanObject_ReturnsJsonBoolean" time="0.003"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_CollectionObject_ReturnsJsonArray" time="0.001"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_MapObject_ReturnsJsonObject" time="0.001"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_NullObject_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_NumberObject_ReturnsJsonNumber" time="0.001"/>
  <testcase classname="com.utils.shared.util.JsonUtilTest" name="testToJson_StringObject_ReturnsJsonString" time="0.001"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testAddDays" time="0.034"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testAreEqualDates" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testAreEqualDates_DifferentDates" time="0.001"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testCalculateAge" time="0.003"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testFormatDate" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testFormatDate_NullDate" time="0.001"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testGetDifferenceInDays" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testIsAfter" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testIsAfter_NotAfter" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testIsBefore" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testIsBefore_NotBefore" time="0.001"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testParseDate" time="0.003"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testParseDate_InvalidFormat" time="0.002"/>
  <testcase classname="com.utils.shared.util.DateUtilTest" name="testParseDate_NullDate" time="0.001"/>
  <testcase classname="com.utils.shared.util.ObjectUtilTest" name="testCast" time="0.001"/>
  <testcase classname="com.utils.shared.util.ObjectUtilTest" name="testDeepCopy" time="0.023"/>
  <testcase classname="com.utils.shared.util.ObjectUtilTest" name="testEquals" time="0.001"/>
  <testcase classname="com.utils.shared.util.ObjectUtilTest" name="testIsNotNull" time="0.0"/>
  <testcase classname="com.utils.shared.util.ObjectUtilTest" name="testIsNull" time="0.0"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCapitalizeWithEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCapitalizeWithLowercaseCharacter" time="0.002"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCapitalizeWithLowercaseString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCapitalizeWithMultipleWords" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCapitalizeWithUppercaseString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_CaseInsensitive_ReturnsCorrectCount" time="0.002"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_CaseSensitive_ReturnsCorrectCount" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_EmptyString_ReturnsZero" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_EmptySubstring_ReturnsZero" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_NullString_ReturnsZero" time="0.0"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testCountOccurrences_NullSubstring_ReturnsZero" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testDeCapitalizeWithEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testDeCapitalizeWithLowercaseString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testDeCapitalizeWithMultipleWords" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testDeCapitalizeWithUppercaseCharacter" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testDeCapitalizeWithUppercaseString" time="0.002"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testEscape" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNotNullOrEmpty_EmptyString_ReturnsFalse" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNotNullOrEmpty_NonEmptyString_ReturnsTrue" time="0.0"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNotNullOrEmpty_NullString_ReturnsFalse" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNullOrEmpty_EmptyString_ReturnsTrue" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNullOrEmpty_NonEmptyString_ReturnsFalse" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsNullOrEmpty_NullString_ReturnsTrue" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsPalindromeWithEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsPalindromeWithNonPalindromeString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsPalindromeWithPalindromeString" time="0.002"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testIsPalindromeWithSingleCharString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testReverse_EmptyString_ReturnsEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testReverse_NormalString_ReturnsReversedString" time="0.0"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testReverse_NullString_ReturnsNull" time="0.0"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testToCharArrayWithEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testToCharArrayWithNonEmptyString" time="0.002"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testTruncate_EmptyString_ReturnsEmptyString" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testTruncate_LongString_TruncatesAndAddsEllipsis" time="0.001"/>
  <testcase classname="com.utils.shared.util.StringUtilTest" name="testTruncate_NullString_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testContains_ElementInArray_ReturnsTrue" time="0.006"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testContains_ElementNotInArray_ReturnsFalse" time="0.002"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testContains_NullArray_ReturnsFalse" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testFindMax_EmptyArray_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testFindMax_NonEmptyArray_ReturnsMaxElement" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testFindMax_NullArray_ReturnsNull" time="0.0"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testGetSubArray_InvalidIndexes_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testGetSubArray_NullArray_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testGetSubArray_ValidIndexes_ReturnsSubArray" time="0.002"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIndexOf_ElementInArray_ReturnsCorrectIndex" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIndexOf_ElementNotInArray_ReturnsMinusOne" time="0.0"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIndexOf_NullArray_ReturnsMinusOne" time="0.002"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIsEmpty_EmptyArray_ReturnsTrue" time="0.0"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIsEmpty_NonEmptyArray_ReturnsFalse" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testIsEmpty_NullArray_ReturnsTrue" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testMerge_NonEmptyArrayWithNullArray_ReturnsNonEmptyArray" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testMerge_NullArrayWithNonEmptyArray_ReturnsNonEmptyArray" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testMerge_NullArrays_ReturnsNull" time="0.0"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testMerge_TwoNonEmptyArrays_ReturnsMergedArray" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveDuplicates_ArrayWithDuplicates_ReturnsArrayWithoutDuplicates" time="0.0"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveDuplicates_ArrayWithoutDuplicates_ReturnsSameArray" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveDuplicates_NullArray_ReturnsNull" time="0.001"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveElement_ElementInArray_ReturnsArrayWithoutElement" time="0.002"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveElement_ElementNotInArray_ReturnsSameArray" time="0.006"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testRemoveElement_NullArray_ReturnsNull" time="0.005"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testReverse_NonEmptyArray_ReturnsReversedArray" time="0.003"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testReverse_NullArray_ReturnsNull" time="0.003"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testSort_EmptyArray_ReturnsEmptyArray" time="0.005"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testSort_NonEmptyArray_ReturnsSortedArray" time="0.007"/>
  <testcase classname="com.utils.shared.util.ArrayUtilTest" name="testSort_NullArray_ReturnsNull" time="0.005"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testCreateInstance" time="0.006"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testCreateInstance_privateClass_cannotCreateInstance" time="0.01"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testSetFieldValue_booleanField_setsBooleanValue" time="0.006"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testSetFieldValue_intField_setsIntValue" time="0.004"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testSetFieldValue_nonExistingField_throwsReflectionException" time="0.004"/>
  <testcase classname="com.utils.shared.util.ReflectionUtilTest" name="testSetFieldValue_stringField_setsStringValue" time="0.003"/>
</testsuite> <!-- Default test -->
